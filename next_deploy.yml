# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches: [deploy]

jobs:
  bulid:
    name: Production
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Node Modules
        run: yarn install

      - name: Setting up enviroment
        run: |
          echo 'NEXT_PUBLIC_STRIPE_PUBLIC_KEY=put_your_stripe_public_key_here' >> $GITHUB_ENV
          echo 'NEXT_PUBLIC_REST_API_ENDPOINT=https://api.xiufu88.com/graphql' >> $GITHUB_ENV

      - name: Build
        run: yarn build

      - name: Copy build files to production server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: ".next"
          target: "/root/shop/"

      - name: Run SSH command on target
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            PATH=$PATH:/root/.nvm/versions/node/v10.23.3/bin
            pm2 restart frontend

      - name: Teams Notify
        uses: toko-bifrost/ms-teams-deploy-card@master
        with:
          github-token: ${{ github.token }